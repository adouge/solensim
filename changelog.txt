0.3.4, WIP:
  - ASTRA plugin:
    - rewrote .read_states() to accomodate for any zphase (simple trick)
    - added warning to helptext about .clean() possibly overwriting unsaved runfiles

  - track module:
    - .process_states() now adds dphi information (relative to starting beam state ("turn") and to the previous state ("dphi")) to each state
    - .process_states() now adds z, pz and t from reference particles to the rest, eliminating the need for a separate "refs" object

  - core module:
    - added numerical field integration, based on Simpsons' method. F3 is bad - "second derivative" from slopes 0.1-1 mm steps is, well, bad.
    - Renamed calc.py into core.py, for less confusion

  - General:
    - Added some code to wrapper to streamline binding various modules to each other; since nothing will invoke the backend going around the interfaces (wrapper, at least),
      it is safe to not declare these connections explicitly and use "undefined" objects in backend code.


0.3.3, 15.09.20:
  - General:
    - separated demos and BA-relevant routines; I want to make a clear distinction between solensim and my thesis work.

  - ASTRA plugin:
    - renamed .get_field() to .read_field()
    - introduced .field field - .read_field() now also stores the field aside from returning z, Bz,
        and write_field analogously writes it to astra.field
    - expanded helptext to describe the handle's data fields
    - fixed read_zemit and trajectories not working (kek blunder)
    - temporarily disabled read_zemit, because no clue what the numbers mean, yet
    - .read_screens rewritten as .read_states - not dependent on runfile, flexible (regex & dataframes), and with initial beam state as well
    - added .read_last to only grab the first and last beam states only
    - .workspace() now sorts its output
    - won't say final (again), but looks like it (kek)

  - Tracking presets:
    - ring preset: change default radius from 3mm to 1 mm; - 3 MeV Ekin, 10% sigma, uniform E distribution
    - added line preset: uniform line from -10 to 10 mm (sigmas); monochromatic
    - default beam + gen: gaussian bundle, 1x1x3mm (x,y,z); 3 MeV Ekin 1 % sigma; nemit_x,y 1
    - default runfile: disabled ref output; track from 0 to 4 m, state image every 10 cm

  - Track module:
    - can do state trafo to polar
    - correct phi and delta phi calculations

  - Demos:
    - Rotation from radius demo (via line, no correlation)
    - Rotation from energy demo (via ring)
    - Field scaling sweep demo - need to use ASTRA's loop controls.

0.3.2, 12.09.20:
  - ASTRA plugin:
    - wrote a helptext documenting the ASTRA plugin
    - changing track preset no longer tries to load the corresponding beam
    - changed interface formatting a bit
    - added ability to write beam.ini from beam dataframe
    - added verbosity control to frontend
    - .clean() now does not mop the field file and reloads the presets
    - caught a mistake that made saved presets unusable
    - have .generate() load the generated beam
    - is pretty much done for now, aside from, eventually, loading other output files

  - Tracking presets:
    - added cross (5mm), square box (5mm), non-monochromatic (10% sigma) 3 mm 3 MeV ring
    - turned off field scaling in default runfile

  - General:
    - main script is "production-ready", for what it can do now;
    - changelog should be more structured
    - changed sscode package to solensim; having a solensim folder inside a solensim folder is not too bad, but looks better in the code.
    - expanded the readme.txt

0.3.1, 11.09.20:
  - implemented preset management in ASTRA plugin
  - finished default ASTRA plugin setups

0.3.0, 10.09.20:
  - start a changelog
  - add concept flowchart to docs
  - fix get_astra to add executable flag to the downloaded binaries
  - restructuring again, this time final - placeholder classes everywhere
  - closed #29 (wontfix, getting over my head with all the pointless "cool developer" shenanigans)
  - remove old code (I still have it, just to declutter)
  - added a placeholder .ini file for the future
  - Worked up an ASTRA plugin/interface, see associated v0.3 issues
  - Reogranized the docs a bit
  - Realized the grave need for documentation.

0.2.1, 25.08.20:
  - restructure code for future feature expansion
  - lay "structure" for MATLAB, Astra plugins
  - update build script to accomodate new changes
  - remove circular dependency of wrapper/frontend (FE calls method of W which calls methods added in FE)

0.2.0, Foundation: start of change logging
